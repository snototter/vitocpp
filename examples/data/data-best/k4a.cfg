// Example configuration for a k4a/azure kinect.
//
// We use the official libk4a API to access the sensor streams.

camera = {
  // [Mandatory] Specify the device/sink type.
  sink_type = "k4a";

  // [Optional] If omitted or empty, the first available azure kinect will be opened.
  serial_number = "";

  // [Optional] Specify a custom label
  label = "Kinect #1";


  // [Optional] Where to load/store the intrinsic calibration from/to.
  calibration_file = "calib-k4a.xml";

  // [Optional] If true, the sensor calibration will be stored to "calibration_file".
  write_calibration = true; // If set, the calibration_file will be overwritten

  // [Optional] Set to true to rectify streams.
  rectify = true;


  // [Optional] Do you want to work with RGB or BGR?
  color_as_bgr = false;

  // [Optional] Log verbosely or not
  verbose = true;

  // [Optional] If true, depth stream will be aligned to the color stream's view (if enabled).
  align_depth_to_color = true;

  // [Optional] If true, the sensor will only send "complete" framesets, i.e. both color and depth are synchronized.
  synchronized_images_only = true;

  // [Optional] How long should we wait (at most) for a new frameset to arrive.
  capture_timeout_ms = 500;

  // [Optional] k4a_color_resolution_t (specify the enum's name).
  color_resolution = "K4A_COLOR_RESOLUTION_720P";

  // [Optional] k4a_depth_mode_t (specify the enum's name).
  depth_mode = "K4A_DEPTH_MODE_NFOV_UNBINNED";

  // [Optional] In addition to color and depth, you can also retrieve the infrared stream.
  enable_infrared_stream = true;

  // [Optional] k4a_fps_t (specify the enum's name).
  fps = "K4A_FRAMES_PER_SECOND_5";

  // [Optional] Turn indicator LED on/off.
  disable_streaming_indicator = false;

  // [Optional] Desired delay in microseconds between capturing color and depth image.
  depth_delay_off_color_usec = 0;

  // [Optional] Return depth in meters (true) or millimeters (false).
  depth_in_meters = false;

  // [Optional] The external synchronization mode - use this to configure master/subordinate connections. k4a_wired_sync_mode_t, use enum's name as string.
  wired_sync_mode = "K4A_WIRED_SYNC_MODE_STANDALONE";

  // [Optional] External synchronization timing (if this sensor is a subordinate).
  subordinate_delay_off_master_usec = 0;

  // [Optional] List of color sensor settings which should be set to "auto" mode.
  color_control_auto = [
    "K4A_COLOR_CONTROL_EXPOSURE_TIME_ABSOLUTE",
    "K4A_COLOR_CONTROL_WHITEBALANCE"
  ];

  // [Optional] List of (color sensor setting, value) pairs which should be set.
  color_control_manual = (
    ("K4A_COLOR_CONTROL_BACKLIGHT_COMPENSATION", 1),
    ("K4A_COLOR_CONTROL_POWERLINE_FREQUENCY", 1),
    ("K4A_COLOR_CONTROL_SATURATION", 32),
    ("K4A_COLOR_CONTROL_SHARPNESS", 2)
  );

  // [Optional] Perform a basic image transformation/manipulation, see imutils.h:
  //transform = "rot270";
};
