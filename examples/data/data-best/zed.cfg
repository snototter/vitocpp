// Example configuration for a ZED stereo cam.

camera = {
  // [Mandatory] Specify the device/sink type.
  camera_type = "zed";

  // [Optional] By default, we will open the first available ZED cam.
  // * set device=X to open /dev/videoX on Linux (or camera X on Windows)
  // OR
  // * set serial_number to open the ZED cam with the given serial number
//  serial_number = 12345;
//  device = 0;
  
  
  // [Optional] Specify a custom label
  label = "My ZED cam";

  // [Optional] Do you want to work with RGB or BGR?
  color_as_bgr = false;

  // [Optional] Frame rate.
  fps = 30;

  // [Optional] Change image resolution: hd2k, hd1080 (or 1080p), hd720 (or 720p), vga
  resolution = "vga";

  // [Optional] Select streams: left, right, depth, left-right-depth
  streams = "depth";

  // [Optional] Upon starting the sensor, the calibration will be stored to "calibration_file".
  write_calibration = true;
  // [Optional] Where to load/store the camera's intrinsic/stereo calibration.
  calibration_file = "calib-zed.xml";
  
  // [Optional] ZED depth mode, none/performance/quality/ultra
  depth_mode = "ultra";

  // [Optional] Return depth measurements in meters (true) or millimeters. 
  depth_in_meters = false;

  // [Optional] You can enable (default) or disable the depth stabilization (on homogeneously textured regions).
  depth_stabilization = true;

  // [Optional] Flip the image if the camera is mounted upside down.
  flip_image = false;

  // [Optional] You can disable the initial self calibration step for repeatability.
  disable_self_calibration = false;

  // [Optional] Enable (default) or disable ZED's image enhancement ("enhanced contrast technology").
  enable_image_enhancement = false;

  // [Optional] By default, ZED will use the most powerful NVIDIA GPU found (gpu_id = -1).
  // Set to 0-based index (0 to num_gpus-1) to select a specific GPU.
  gpu_id = -1;

  // [Optional] Sensing mode: standard, fill
  sensing_mode = "standard";

  // [Optional] Threshold to reject depth values based on their confidence, int in [1, 100].
  // 100 ==> report all depth measurements
  // 90  ==> discard lowest confidence values
  // 20  ==> keep only highest confidence measurements
  confidence_threshold = 100;

  // [Optional] Threshold to reject depth values based on their textureness confidence, int in [1, 100].
  // 100 ==> report all depth measurements
  textureness_threshold = 100;

  // [Optional] Basic image transformations 
//  transform = "depth2surfnorm, surfnorm2rgb";

  verbose = true;
};

/*camera_zed_web = {
  camera_type = "webcam";
  device = 8;
};*/
